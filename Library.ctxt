#BlueJ class context
comment0.params=
comment0.target=Library()
comment0.text=\n\ Sets\ the\ default\ constructor\ of\ the\ Library\ class.\n\ sets\ new\ BorrowerList,\ Booklist\ and\ textFields\n
comment1.params=borrowerIndex\ bookChosen
comment1.target=void\ addBorrowerBook(int,\ int)
comment1.text=\n\ Method\ to\ check\ for\ various\ of\ condition\ while\ user\ borrowing\ the\ book.\ Checks\n\ the\ rating\ and\ correspond\ that\ to\ the\ borrower\ age,\ checks\ if\ same\ book\ is\ getting\ borrowed\ twice,\n\ and\ preventing\ user\ from\ borrowing\ more\ than\ 2\ books.\ Then\ add\ books\ if\ all\ conditions\ are\ met.\n\ @param\ borrowerIndex,\ bookChosen\ \ \ \ \ \ set\ borrowerIndex\ as\ index\ and\ set\ bookChosen\ as\ bookChosen\n
comment10.params=
comment10.target=void\ help()
comment11.params=
comment11.target=int\ integerScanner()
comment11.text=\n\ Method\ to\ create\ new\ scanner\ of\ type\ int\n
comment12.params=
comment12.target=void\ loadlibrary()
comment12.text=\n\ Method\ to\ load\ the\ borrower\ file\ and\ book\ file\n\ Also\ load\ in\ the\ main\ menu\n
comment13.params=
comment13.target=void\ loadMenu()
comment13.text=\n\ Method\ to\ allow\ user\ view\ the\ main\ menu\n\ and\ allow\ user\ to\ input\ one\ of\ the\ five\ options.\n\ Option\ 1\ creates\ new\ borrower,\ option\ 2\ checkes\ if\ any\ borrower\ exists\n\ by\ checking\ the\ length\ of\ the\ borrower\ ArrayList\ then\ loads\ sub-menu\n
comment14.params=
comment14.target=void\ loadSubMenu()
comment14.text=\n\ Method\ to\ allow\ user\ view\ the\ sub\ menu\n\ and\ allow\ user\ to\ input\ one\ of\ the\ four\ options.\n\ Requests\ for\ borrower\ to\ be\ selected\ by\ searching,\ lists\ all\ borrowers\n\ related\ to\ the\ search,\ locates\ their\ corresponding\ ArrayList\ index.\n\ Option\ 1\ checks\ if\ any\ book\ exists\ in\ the\ library\ then\ allow\ user\ to\n\ select\ their\ book.\ Option\ 2\ removes\ the\ book\ from\ the\ user\ and\n\ option\ 3\ allows\ the\ viewing\ of\ the\ borrowed\ book.\n
comment15.params=
comment15.target=void\ newBorrower()
comment15.text=\n\ Method\ that\ creates\ new\ borrower\ based\ upon\n\ the\ values\ that\ the\ user\ inputs\ using\ the\ Scannner\n\ Generates\ random\ ID\ from\ 1-100\ for\ the\ user\n
comment16.params=input
comment16.target=void\ printSearchedUser(java.lang.String)
comment16.text=\n\ Method\ that\ prints\ the\ list\ of\ borrowers\ and\ their\n\ ID\ based\ upon\ the\ search\ made\ by\ the\ user\n\ @param\ input\ \ \ \ \ \ set\ input\ as\ input\n
comment17.params=
comment17.target=void\ readBook()
comment17.text=\n\ Method\ that\ reads\ each\ books\ into\ the\ library\ and\ stores\ them\ in\ the\ bookList\ class\n
comment18.params=
comment18.target=void\ readBorrower()
comment18.text=\n\ Method\ that\ reads\ borrowers\ and\ their\ borrowed\ books,\ if\ any\n\ from\ a\ text\ file\ and\ store\ it\ into\ objects.\n
comment19.params=
comment19.target=void\ showReport()
comment19.text=\n\ Method\ the\ print\ the\ user\ detail\ and\ their\ corresponding\ books\ borrowed\ if\ any\n
comment2.params=getIndexBorrower\ getIndexBook
comment2.target=void\ addBooks(int,\ int)
comment2.text=\n\ Method\ to\ list\ the\ books\ that\ is\ borrowed\ by\ the\ specified\ borrower.\n\ Takes\ in\ index\ of\ the\ borrower\ and\ the\ book\ as\ parameters\n\ @param\ getIndexBorrower,\ getIndexBook\ \ \ \ \ \ set\ getIndexBorrower\ as\ index\ and\ set\ getIndexBook\ as\ getIndexBook\n
comment20.params=
comment20.target=java.lang.String\ stringScanner()
comment20.text=\n\ Method\ to\ create\ new\ scanner\ of\ type\ String\n
comment21.params=
comment21.target=void\ subMainMenu()
comment21.text=\n\ Method\ to\ print\ out\ the\ sub\ menu\ for\ the\ library\n
comment22.params=
comment22.target=void\ testAddBooks()
comment23.params=
comment23.target=int\ validateAge()
comment23.text=\n\ Method\ that\ performs\ validation\ on\ the\n\ age.\ Ensures\ user\ enters\ age\ between\ 5\ and\ 110\n\ Ensures\ the\ age\ inputed\ is\ strictly\ of\ type\ integer\n\ and\ no\ Strings\ or\ character\ can\ be\ passed\n
comment24.params=
comment24.target=int\ validateBook()
comment24.text=\n\ Method\ that\ validates\ the\ borrower\ input\ when\ choosing\ \n\ the\ index\ in\ which\ they\ wish\ to\ borrow\ the\ book\n\ Method\ displays\ error\ if\ index\ of\ book\ chosen\ does\ not\ exist\ or\ if\n\ user\ enteres\ non\ Int\ type\ such\ as\ Strig\ or\ character.\n
comment25.params=
comment25.target=int\ validateIndexInput()
comment25.text=\n\ Method\ that\ performs\ validation\ on\ the\n\ ID.\ Ensures\ user\ enters\ ID\ between\ 1\ and\ 100\n\ Ensures\ the\ ID\ inputed\ is\ strictly\ of\ type\ integer\n\ and\ no\ Strings\ or\ character\ can\ be\ passed\n
comment26.params=lowerRange\ higherRange
comment26.target=int\ validateUserInputMain(int,\ int)
comment26.text=\n\ Method\ that\ performs\ validation\ on\ the\n\ user\ input\ for\ seleting\ the\ case\ in\ menu\ \n\ Ensures\ user\ enters\ option\ between\ 1\ and\ 4\ or\ 1\ and\ 5\n\ Ensures\ the\ option\ inputed\ is\ strictly\ of\ type\ integer\n\ and\ no\ Strings\ or\ character\ can\ be\ passed\n\ @param\ lowerRange,\ higherRange\ \ \ \ \ \ set\ lowest\ option\ entered\ as\ lowerRange\ and\ set\ highest\ option\ entered\ as\ higherRange\n
comment27.params=
comment27.target=java.lang.String\ validateName()
comment27.text=\n\ Method\ that\ checks\ if\ the\ name\ entered\ does\ not\ contains\ any\ number\n\ if\ number\ are\ presented,\ error\ message\ is\ shown.\n
comment28.params=
comment28.target=void\ writeToFile()
comment28.text=\n\ Method\ that\ writes\ the\ data\ into\ file\n
comment3.params=
comment3.target=java.util.ArrayList\ bookCollection()
comment3.text=\n\ Method\ that\ returns\ the\ ArrayList\ of\n\ the\ booklist\ class\n
comment4.params=
comment4.target=java.util.ArrayList\ listBorrower()
comment4.text=\n\ Method\ that\ returns\ the\ ArrayList\ of\n\ the\ borrowerList\ class\n
comment5.params=
comment5.target=void\ bookList()
comment5.text=\n\ Method\ that\ prints\ the\ available\ book\ in\ the\ library\n
comment6.params=index
comment6.target=int\ bookRemove(int)
comment6.text=\n\ Method\ that\ removes\ the\ books.\ Checks\ to\ ensure\n\ user\ are\ entering\ the\ index\ of\ the\ book\ in\ the\ specified.\n\ Also\ ensure\ that\ input\ entered\ are\ of\ type\ Integer\ not\ a\ String\n\ or\ contain\ any\ characters.\ Removes\ the\ book\ based\ on\ the\ user\ by\ \n\ using\ their\ ArrayList\ index\n\ @param\ index\ \ \ \ \ \ set\ index\ as\ the\ index\ of\ the\ ArrayList\ of\ the\ borrower\n
comment7.params=
comment7.target=void\ displayMainMenu()
comment7.text=\n\ Method\ to\ print\ out\ the\ main\ menu\ for\ the\ library\n
comment8.params=
comment8.target=int\ getGeneratedID()
comment8.text=\n\ Method\ that\ produces\ random\ generated\ number\ for\ the\ ID\n\ Number\ is\ between\ 1\ and\ 100\n\ Number\ are\ generated\ everytime\ if\ it\ matches\ any\ of\ the\ previous\ ID\n
comment9.params=ID
comment9.target=int\ getBorrowerIndex(int)
comment9.text=\n\ Method\ that\ returns\ the\ borrowerList\ ArrayList\ index\n\ that\ corresponds\ to\ the\ inputed\ ID\n\ @param\ ID\ \ \ \ \ \ set\ ID\ as\ userInputID\n
numComments=29
